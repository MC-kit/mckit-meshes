target-version = "py312"
line-length = 100
src = ["src", "tests"]
exclude = [
    "*.egg-info",
    ".cache",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".mypy_cache",
    ".nox",
    ".ruff_cache",
    ".venv",
    "__pycache__",
    "_build",
    "adhoc",
    "build",
    "data", 
    "dist",
    "docs/source/conf.py",
    "notebooks",
    "venv",
    "wrk",
]

[lint]
select=["ALL"]
ignore=[
  "ANN001", # ANN001 Missing type annotation for function argument: doesn't allow to use functools dispatching
  "ANN002", # ANN002 Missing type annotation for *drop_items: ... as above
  "ANN201", # Missing return type annotation for public function `mesh2com`
  "ANN202", # ANN202 Missing return type annotation for protected function: ... dispatching
  "ANN204", # ANN204 Missing return type annotation for special method
  "C901", # too complex - ...
  "COM812",
  "D100", # Missing docstring in public module
  "D101", # Missing docstring in public class
  "D102", # Missing docstring in public method
  "D103", # Missing docstring in public function
  "D105", # D105 Missing docstring in magic method (__hash__, __eq__)
  "D104", # Missing docstring in public package
  "D106", # Missing docstring in public nested class
  "D107", # Missing docstring in __init__
  "D203",
  "D211",
  "D213",
  "E402", # Module level import not at top of file
  "EM101", # Exception must not use a string literal, assign to variable first
  "EM102", # Exception must not use an f-string literal, assign to variable first
  "FBT002", # Boolean default value in function definition (TODO!)
  "FBT003", # Boolean positional value in function call
  "FIX", # Remove TODOs
  "I001", # import order is controlled by isort

  "ISC001", # may cause conflicts when used with the ruff formatter

  "PLE1205", # logging-too-many-args - we use loguru with '{' style of placeholders

  "PLR0912", # Too many branches (15 > 12)
  "PLR0913", # Too many arguments to function call (6 > 5)
  "PLR0915", # Too many statements (65 > 50)
  "PLR2004", # magic number - don't want to declare 0.0 as constant
  "PT019", # Fixture `_bin` without value is injected as parameter (false positive?)
  "S101", # Use of `assert` detected
  "SLF001", # Private member accessed: `_geometry_spec`
  "TD002",  # Missing author in TODO
  "TD003",  # Missing link for this TODO
  "TD004",  # Missing colon in TODO
  "TRY003", #  Avoid specifying long messages outside the exception class
]

[lint.per-file-ignores]
"benchmarks/*" = ["S101"]
"tests/*" = [
  "ANN",
  "D100",
  "D101",
  "D102",
  "D103",
  "D104",
  "PLR2004",
  "S101",
]
"tools/*" = ["T201", "INP001", "S603", "S607"]

[lint.mccabe]
# Unlike Flake8, default to a complexity level of 10.
max-complexity = 15

[lint.flake8-annotations]
mypy-init-return = true  # skip return type for __init__() methods

[lint.flake8-pytest-style]
parametrize-names-type = "csv"

[lint.flake8-type-checking]
strict = true

# warning: The isort option `isort.split-on-trailing-comma` is incompatible
# with the formatter `format.skip-magic-trailing-comma=true` option.
# To avoid unexpected behavior, we recommend either setting `isort.split-on-trailing-comma=false`
# or `format.skip-magic-trailing-comma=false`.

[lint.isort]
known-first-party = ["src"]
known-third-party = ["mpl_toolkits", "matplotlib", "numpy", "scipy", "loguru", "tqdm", "dotenv"]
default-section = "third-party"
lines-between-types = 1
required-imports = ["from __future__ import annotations"]
case-sensitive = true
section-order = [
    "future",
    "typing",
    "standard-library",
    "third-party",
    "first-party",
    "local-folder",
    "testing"
]

[lint.isort.sections]
"typing" = ["typing", "typing_extension"]
"testing" = ["tests"]

[lint.pydocstyle]
convention = "google" # Use Google-style docstrings.

[format]
docstring-code-format = true
